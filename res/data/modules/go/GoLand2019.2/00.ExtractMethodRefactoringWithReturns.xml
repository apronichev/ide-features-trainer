<xml type="Scenario" name="Extract Method refactoring with returns" id="Goland2019.2.ExtractMethodRefactoringWithReturns" lang="go">
    <MouseBlock>
        <CopyText><![CDATA[package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

func main() {
	for {
		reader := bufio.NewReader(os.Stdin)
		fmt.Printf("Enter text: ")
		text, _ := reader.ReadString('\n')
		text = strings.TrimSpace(text)
		if text == "quit"{
			return
		} else if text == "foo" {
			fmt.Printf("foo")
		} else {
			fmt.Printf("bar")
		}
	}
}
]]></CopyText>
    </MouseBlock>
    <MoveCaret position="16:9"/>
    <Try action="ExtractMethod" trigger="ExtractMethod">By using the Extract Method refactoring, you can take a code fragment, move it into a separated method and replace the old code with call to the method. For example, position the caret before the <code>if</code> clause and press <action>ExtractMethod</action>.</Try>
    <Try action="EditorEscape" trigger="EditorEscape">Type <code>handler</code> as a method name and press <action>EditorEscape</action>.</Try>
    <Win/>
</xml>